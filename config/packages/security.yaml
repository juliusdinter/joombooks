security:
    encoders:
        Lexik\Bundle\JWTAuthenticationBundle\Security\User\JWTUser:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        user_provider:
            entity:
                class: App\Entity\Korisnici
                property: email
        library_provider:
            entity:
                class: App\Entity\Knjiznica
                property: email
        chain_provider:
            chain:
                providers: [ user_provider, library_provider ]
        users_in_memory: { memory: null }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: users_in_memory
            guard:
                authenticators:
                    - App\Security\KorisniciAuthenticator
                    - App\Security\KnjizniceAuthenticator
                entry_point: App\Security\KorisniciAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/knjiznica, roles: ROLE_LIBRARY}
         - { path: ^/, roles: ROLE_USER }
